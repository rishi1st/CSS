/** ------------------------------------- -->
/**                                            BOX MODEL IN CSS  (BOX SIZING)
/** ---------------------------------------- --> */

/*? The CSS Box Model consists of four main components:

1. Content: This is the innermost part of the element, which holds the actual content, such as text, images, or other HTML elements.

2. Padding: Padding is the space between the content and the element's border. It provides internal spacing within the element.
            content and border ke bix ka space ko padding 
    
3. Border: The border surrounds the padding and content, creating a visible boundary around the element. It can have a thickness, style, and color.

4. Margin: The margin is the space outside the element's border. It separates the element from other elements on the page and controls the spacing between elements. */

/** VERY VERY IMPORTANT  */

/*? CSS box-sizing is a property that controls how the total width and height of an element are calculated, including its content, padding, and border. It has two possible values: content-box (default) and border-box */

/** box-sizing: content-box: */
/*? In the default content-box value, an element's width and height are calculated based on its content area. Padding and border are added to the specified width and height.
This means that if you set the width of an element to 100 pixels, and then add 10 pixels of padding and a 2-pixel border, the element's total width will be 100 + 10 + 2 = 112 pixels. */

/**  box-sizing: border-box:
When using border-box, an element's width and height include its content, padding, and border. Padding and border are subtracted from the specified width and height.
In this case, if you set the width of an element to 100 pixels, and then add 10 pixels of padding and a 2-pixel border, the content area will be adjusted to fit within the specified 100-pixel width, and the padding and border are contained within that. */

/** ---------------------------------------- --> */



/* ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ */
/** ------------------------------------- -->
/**                                                  PADDING IN CSS
/** ---------------------------------------- --> */

/*? Padding is used to create space around an element's content, inside of any defined borders.  */

/*? 1. Uniform Padding:
    padding: 10px;  
    ðŸ‘‰   This sets 10 pixels of padding on all sides of the element. */

/*? 2. Vertical and Horizontal Padding:  
    padding: 5px 10px;  
    ðŸ‘‰  This sets 5 pixels of padding on the top and bottom sides and 10 pixels on the right and left sides. */

/*? top | left and right | bottom */
/* padding: 1px 2px 2px; */

/*? top | right | bottom | left */
/* padding: 5px 1px 0 2px; */

/*? 1. Individual Padding: */

/* padding-top: 15px;
    padding-right: 20px;
    padding-bottom: 10px;
    padding-left: 5px;
    This sets different padding values for each side of the element. */

/** Use Cases: */

/* - Spacing Elements: Padding is commonly used to add space between an element's content and its border, creating separation between elements on a web page.

- Button Styling: Padding is used to control the spacing inside buttons, making them visually appealing and comfortable to click.

- Text and Images: Padding can be applied to text and images to create spacing around them, improving readability and aesthetics.

- Responsive Design: Padding can be adjusted to create responsive layouts, ensuring content is appropriately spaced on different screen sizes.

- Creating Boxes and Panels: Padding is essential for defining the spacing inside boxes, panels, and containers.

In summary, the `padding` property in CSS is a versatile tool for controlling the spacing around an element's content. By using different values and techniques, you can achieve precise control over the layout and spacing of elements on your web page, improving both aesthetics and usability. */

/** ---------------------------------------- --> */


/* ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ */

/** ------------------------------------- -->
/**                                                   MARGIN IN CSS 
/** ---------------------------------------- --> */

/*? The `margin` property defines the space outside the element's border. It creates separation between the element and other elements in the layout. */

/*? Margins create extra spaceÂ aroundÂ an element, unlikeÂ padding, which creates extra spaceÂ withinÂ an element. */

/** SYNTAX: */

/*? Four Values: `margin: top right bottom left;` */
/* margin: 50px 40px 30px 60px; */

/* - `top`: Specifies the margin on the top side.
- `right`: Specifies the margin on the right side.
- `bottom`: Specifies the margin on the bottom side.
- `left`: Specifies the margin on the left side. */

/*? Three Values: margin: top right-left bottom; */
/* margin: 50px 30px 60px; */

/* - `top`: Specifies the margin on the top side.
- `right-left`: Specifies the margin on the right and left sides.
- `bottom`: Specifies the margin on the bottom side. */

/*? Two Values: margin: top-bottom right-left; */
/* margin: 50px 30px;

- `top-bottom`: Specifies the margin on the top and bottom sides.
- `right-left`: Specifies the margin on the right and left sides. */

/*? One Value: margin: value; */
/* margin: 50px; */
/* If you provide a single value, it applies to all sides equally. */

/* ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ */

/** ------------------------------------- -->
/**                                      BORDERS IN CSS
/** ---------------------------------------- --> */

/*? In CSS, the `border` property is used to create and control the borders of HTML elements. Borders are used to visually separate and define the boundaries of elements on a web page. The `border` property allows you to specify the style, width, and color of borders. Let's explore the `border` property in depth: */

/* 1. Short-hand Syntax:
       ? border: [border-width] [border-style] [border-color];

    - `[border-width]`: Specifies the width of the border (e.g., `1px`, `2px`, `3px`, etc.).
    - `[border-style]`: Specifies the style of the border (e.g., `solid`, `dotted`, `dashed`, etc.).
    - `[border-color]`: Specifies the color of the border (e.g., a color name, hex code, RGB value, etc.). */

/*TODO Let understand the Each border property one by one.  */

/*? Border Width: The border-width property controls the thickness of the border. You can specify it using units like pixels (px), ems (em), or percentages (%). */

/*? Border Style: The border-style property determines the style of the border. Common values include solid, dotted, dashed, double, groove, ridge, inset, and outset. Each style results in a different visual appearance for the border. */
/* Keyword values */
/* border-style: none;
border-style: hidden;
border-style: dotted;
border-style: dashed;
border-style: solid;
border-style: double;
border-style: groove;
border-style: ridge;
border-style: inset;
border-style: outset; */

/* top and bottom | left and right */
/* border-style: dotted solid; */

/* top | left and right | bottom */
/* border-style: hidden double dashed; */

/*? Border Color: The border-color property sets the color of the border. You can specify it using color names, hex codes, RGB values, or other color notations. */

/** ---------------------------------------- --> */


/* ---------------------------- USEFUL WEB SITES  ------------------------------------------ */
/* checkout more on here  ðŸ‘‰ https://9elements.github.io/fancy-border-radius/ */
/* checkout more on here  ðŸ‘‰ https://10015.io/tools/css-border-radius-generator */

/*? Border-radius: TheÂ border-radiusÂ CSSÂ property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners. */

/* Radius is set for all 4 sides */
/*? border-radius: 10px; */

/* top-left-and-bottom-right | top-right-and-bottom-left */
/*? border-radius: 10px 20%; */

/* Creating Custom Radius for Each Corner:  */
/* top-left | top-right | bottom-right | bottom-left */
/*? border-radius: 15px 5px 10px 20px; */

